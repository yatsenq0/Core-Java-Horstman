Введение


Читателю

Язык Java ворвался в глобальную сеть в конце 1995 года и сразу же завоевал всеобщую популярность. Он обещал стать универсальным средством, обеспечивающим связь пользователей с любыми источниками информации, независимо от того, где она расположена— на Web-сервере, в базе данных, справочной системе и т.п. У языка Java есть все предпосылки для этого. Данный язык поддержали все производители программного обеспечения, за исключением компании Microsoft. Присущая Java надежность и наличие средств защиты вселяют уверенность как в программистов, так и в пользователей. Этот язык предоставляет средства, позволяющие решать задачи повышенной сложности, — обеспечивать взаимодействие по сети, управление базами данных и поддерживать выполнение и взаимодействие нескольких потоков.
Начиная с 1995 года компания Sun Microsystems выпустила в свет шесть основных версий набора инструментальных средств Java Development Kit. На протяжении последних девяти лет объем API возрос с 200 до более чем 3000 классов. Теперь он охватывает самые разные области программирования — создание пользовательского интерфейса, управление базами данных, интернационализацию, обеспечение безопасности и представление информации посредством языка XML. Самое большое количество нововведений с момента появления первой реализации было предложено bJDK 5.0, выпущенном в 2004 году.
Книга, которую вы держите в руках, выдержала уже семь изданий. Каждое издание выходило вслед за появлением очередной версии JDK, при этом авторы стремились как можно лучше отразить достоинства новой реализации. В этом издании внимание уделено универсальным наборам данных, новому циклу for и другим новшествам, -появившимся в JDK 5.0.
Данное издание, как и предыдущие, рассчитано на опытных программистов, стремящихся использовать язык Java для воплощения реальных проектов. Мы, как и прежде, обещаем не нервировать читателя и не утомлять его вычурным шрифтом. Предполагается, что читатель этой книги — опытный программист, имеющий солидную подготовку в области языков программирования. Однако знать язык С++ и объектно-ориентированное программирование совсем не обязательно. Опираясь на отклики, полученные после опубликования предыдущих изданий, мы по-прежнему убеждены, что программисты, изучавшие языки Visual Basic, С или COBOL, без проблем во всем разберутся. (Читатель может даже совершенно не иметь опыта разработки графического пользовательского интерфейса в средах Windows, Unix или Macintosh.)
От читателя требуется лишь желание создавать реальные программы для решения реальных задач. Такому читателю вряд ли понравятся тривиальные примеры типа перечня кухонного оборудования или фруктовых деревьев.
Книга содержит большое количество программ, демонстрирующих почти все возможности языка и библиотек, обсуждаемые в тексте. Программы преднамеренно упрощены, чтобы читатель сосредоточил внимание именно на рассматриваемых вопросах. Однако в большинстве случаев они являются вполне реальными и не подменяют настоящее решение задачи его имитацией. Их очень удобно использовать в качестве отправной точки при создании собственных программ.
Предполагается, что читатель стремится овладеть всеми возможностями языка Java. Например, в книге подробно рассматриваются следующие темы.

Объектно-ориентированное программирование (ООП).
Отражение и proxy-объекты.
Интерфейсы и внутренние классы.
Обработчики событий.
Разработка графического пользовательского интерфейса с помощью набора инструментальных средств Swing.
Обработка исключений.
Потоки ввода-вывода и сериализация объектов.
Использование универсальных типов.
Из-за большого объема библиотек классов Java невозможно описать в одном томе все средства, необходимые опытным программистам. Поэтому книга разделена на два тома. Первый том, который вы держите в руках, посвящен основным понятиям языка Java, а также основам программирования пользовательского интерфейса. Во втором томе содержится описание особенностей языка Java, используемых при создании профессиональных приложений, и средств программирования пользовательского интерфейса повышенной сложности. В этом томе подробно обсуждаются следующие темы.

Поддержка нескольких потоков.
Распределенные объекты.
Базы данных.
Расширенные средства создания графического интерфейса.
Платформенно-ориентированные методы.
Представление и обработка данных с помощью языка XML.
Сетевое программирование.
Классы, описывающие наборы данных.
Расширенные средства для работы с графикой.
Интернационализация.
JavaBeans.
При написании книги неизбежны ошибки и неточности. Мы были бы очень признательны, если бы читатели, обнаружившие их, сообщили нам. Естественно, нам бы хотелось, чтобы поводов для таких сообщений было поменьше. Список наиболее часто задаваемых вопросов, а также исправлений и уточнений можно найти на Web-странице http://www.horstmann.com/corejava.html. В конце перечня замеченных ошибок есть анкета, в которой можно указать встреченные неточности и записать свои пожелания. Место для этой анкеты выбрано специально, чтобы читатель сначала прочитал вопросы и ошибки, выявленные другими пользователями. Пожалуйста, не огорчайтесь, если мы не ответим на каждый вопрос или ответим не сразу. Мы читаем все сообщения электронной почты и благодарим вас за стремление сделать будущие издания книги еще понятнее и точнее.
Мы надеемся, что чтение этой книги доставит вам удовольствие и поможет в работе.
О книге
В главе 1 содержится обзор особенностей Java, отличающих его от других языков программирования. Здесь описываются цели, которых стремились достичь разработчики языка, а также результаты, которых они действительно достигли. Далее излагается краткая история создания и развития языка Java.
В главе 2 описан процесс получения и инсталляции пакета JDK. Затем показано, как загрузить примеры программ, рассмотренных в книге. Кроме того, в главе продемонстрирован процесс компиляции и выполнения типичных программ, написанных на языке Java: консольного приложения, графического приложения и аплета. Для работы с данным типом программ использованы пакет JDK, текстовый редактор, в котором предусмотрен вызов компилятора и интегрированная среда Java.
Обсуждение языка Java начинается в главе 3. Здесь описаны основы языка: переменные, циклы и простые функции. Если вы умеете программировать на языках С или С++, то легко поймете, о чем идет речь, поскольку синтаксис Java похож на синтаксис языка С. Если же вы не умеете программировать на языке С, а изучали, например, языки Visual Basic или COBOL, вам следует внимательно прочитать эту главу.
В настоящее время объектно-ориентированное программирование является основным направлением развития программирования вообще, а язык Java представляет собой полностью объектный язык. В главе 4 рассматривается инкапсуляция (первое из двух основных понятий объектно-ориентированного программирования) и механизм ее реализации в языке Java, т.е. классы и методы. Кроме правил языка Java, приводятся советы, касающиеся разработки программ с использованием объектного подхода. Наконец, в этой главе описывается замечательная утилита javadoc, позволяющая форматировать комментарии в программе в виде совокупности Web-страниц с гипертекстовыми ссылками- Если вы знакомы с языком С++, то можете просто пролистать эту главу. Программисты, не имеющие опыта объектно-ориентированного программирования, должны посвятить некоторое время изучению его основ, прежде чем продолжить изучение языка Java.
Инкапсуляция представляет собой лишь рдин из принципов объектно-ориентированного программирования. В главе 5 вводится новое понятие — наследование, позволяющее программистам использовать существующие классы и модифицировать их для своих нужд. Это — основной способ программирования на языке Java. Механизмы наследования в языках Java и С++ почти одинаковы, поэтому программисты, знающие язык С++, могут сосредоточиться лишь на различиях между этими языками.
В главе 6 показано, как использовать такое понятие языка Java, как интерфейс Интерфейсы позволяют выйти за рамки простого наследования, описанного в главе 5. Освоив интерфейсы, читатель получит возможность полностью использовать всю мощь объектно-ориентированного программирования. Здесь также описаны полезные средства языка Java, называемые внутренними классами. Они позволяют делать программы более ясными и четкими.
В главе 7 изучение программирования начинается всерьез. В этой главе показано, как создать окно, нарисовать в нем геометрическую фигуру, отформатировать текст с использованием различных шрифтов и отобразить рисунки.
Глава 8 посвящена обсуждению модели событий AWT (Abstract Windowing Toolkit). Читатель узнает, как написать программу, которая реагировала бы на такие события, как щелчок мыши или нажатие клавиши. Кроме того, в главе показано, как работать с основными элементами графического пользовательского интерфейса, например с кнопками и панелями.
В главе 9 очень подробно обсуждается набор инструментальных средств Swing, позволяющий создавать графический пользовательский интерфейс, не зависящий от конкретной платформы. Здесь вы узнаете о разнообразных видах кнопок, текстовых компонентах, рамках, линейных регуляторах, списках, меню и диалоговых окнах. Однако некоторые, более сложные компоненты будут рассмотрены во втором томе.
Завершив изучение главы 9, читатель получит представление обо всех механизмах, позволяющих создавать аплеты, т.е. небольшие программы, выполняющиеся в среде, реализуемой браузером. Они являются предметом обсуждения главы 10, в которой показаны примеры полезных аплетов. Однако намного важнее то, что аплеты рассматриваются нами как иллюстрация средств доставки программ (program deployment). В главе описано, как запаковать приложение в JAR-файл и доставить его по глобальной сети, используя механизм Java Web Start. В заключение объясняется способ, с помощью которого программы, написанные на языке Java, сохраняют и извлекают информацию после своего развертывания.
В главе 11 обсуждается обработка исключений, которая позволяет выходить его затруднительных положений, в которые могут попадать даже хорошие программы. Например, при загрузке файла по сети могут произойти разрыв соединения, переполнение диска и другие неприятности. Обработка исключений представляет собой эффективный способ разделения нормального выполнения программы и обработки ошибок. Разумеется, даже если в программе предусмотрены все исключения, остается возможность ее сбоя. Кроме того, в главе приводится большое количество полезных советов, касающихся отладки программ. В заключение рассматриваются примеры отладки программ с помощью утилиты JDB, отладчика интегрированной среды программирования и класса Robot. Глава 12 посвящена вводу-выводу данных. В языке Java любой ввод и вывод выполняется через так называемые потоки, позволяющие осуществлять связь с любыми источниками информации, например файлами, узлами сети или блоками памяти. В этой главе подробно описываются классы, предназначенные для ввода и вывода, с помощью которых легко работать с форматом Unicode, а также раскрывается механизм сериализации объектов. В заключение описывается несколько библиотек, включенных в версию пакета SDK 1.4: новые классы ввода-вывода, поддерживающие более сложные и эффективные операции над файлами, а также библиотеки регулярных выражений.
Завершается книга обзором способов программирования с использованием универсальных типов, которые были реализованы в JDK 5.0.
Универсальные типы упрощают восприятие кода программы и позволяют добиться более надежной работы. Мы покажем, как избежать лишнего приведения типов, снижающего надежность программы.
В приложении А перечислены ключевые слова языка Java.
В приложении Б рассказано, как модифицировать код, чтобы он мог быть обработан компиляторами из предыдущих версийJDK (например, версии 1.4).
